# Generated by Django 4.2.4 on 2023-08-06 16:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Followers',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_at', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'followers',
            },
        ),
        migrations.CreateModel(
            name='Profiles',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_at', models.DateField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('surname', models.CharField(blank=True, max_length=100)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('photo', models.CharField(blank=True, max_length=100)),
                ('date_of_birth', models.DateTimeField(null=True)),
                (
                    'auth_user',
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='profiles',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'followers',
                    models.ManyToManyField(
                        through='core.Followers', to='core.profiles'
                    ),
                ),
            ],
            options={
                'db_table': 'profiles',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_at', models.DateField(auto_now=True)),
                ('tag', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Twits',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_at', models.DateField(auto_now=True)),
                ('text', models.CharField(max_length=400)),
                (
                    'answer_to_twit',
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='answer',
                        to='core.twits',
                    ),
                ),
            ],
            options={
                'db_table': 'twits',
            },
        ),
        migrations.CreateModel(
            name='TwitsTags',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_at', models.DateField(auto_now=True)),
                (
                    'tag',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='twit_tag',
                        to='core.tags',
                    ),
                ),
                (
                    'twit',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='tags_twit',
                        to='core.twits',
                    ),
                ),
            ],
            options={
                'db_table': 'twits_tags',
            },
        ),
        migrations.CreateModel(
            name='TwitsProfilesReposts',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_at', models.DateField(auto_now=True)),
                (
                    'profile',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='twits_repost',
                        to='core.profiles',
                    ),
                ),
                (
                    'twit',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='profiles_repost',
                        to='core.twits',
                    ),
                ),
            ],
            options={
                'db_table': 'twits_profiles_reposts',
            },
        ),
        migrations.CreateModel(
            name='TwitsProfilesNotifications',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_at', models.DateField(auto_now=True)),
                (
                    'profile',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='twits_notification',
                        to='core.profiles',
                    ),
                ),
                (
                    'twit',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='profiles_notification',
                        to='core.twits',
                    ),
                ),
            ],
            options={
                'db_table': 'twits_profiles_notifications',
            },
        ),
        migrations.CreateModel(
            name='TwitsProfilesLikes',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateField(auto_now_add=True)),
                ('update_at', models.DateField(auto_now=True)),
                (
                    'profile',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='twits_like',
                        to='core.profiles',
                    ),
                ),
                (
                    'twit',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='profiles_like',
                        to='core.twits',
                    ),
                ),
            ],
            options={
                'db_table': 'twits_profiles_likes',
            },
        ),
        migrations.AddField(
            model_name='twits',
            name='like',
            field=models.ManyToManyField(
                related_name='likes',
                through='core.TwitsProfilesLikes',
                to='core.profiles',
            ),
        ),
        migrations.AddField(
            model_name='twits',
            name='profile',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='twits',
                to='core.profiles',
            ),
        ),
        migrations.AddField(
            model_name='twits',
            name='repost',
            field=models.ManyToManyField(
                related_name='reposts',
                through='core.TwitsProfilesReposts',
                to='core.profiles',
            ),
        ),
        migrations.AddField(
            model_name='twits',
            name='tag',
            field=models.ManyToManyField(through='core.TwitsTags', to='core.tags'),
        ),
        migrations.AddField(
            model_name='profiles',
            name='notification',
            field=models.ManyToManyField(
                through='core.TwitsProfilesNotifications', to='core.twits'
            ),
        ),
        migrations.AddField(
            model_name='followers',
            name='follower_profile',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='follower',
                to='core.profiles',
            ),
        ),
        migrations.AddField(
            model_name='followers',
            name='profile',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='follower_profile',
                to='core.profiles',
            ),
        ),
        migrations.AddConstraint(
            model_name='twitstags',
            constraint=models.UniqueConstraint(
                fields=('twit', 'tag'), name='unique_twits_tags'
            ),
        ),
        migrations.AddConstraint(
            model_name='twitsprofilesreposts',
            constraint=models.UniqueConstraint(
                fields=('twit', 'profile'), name='unique_reposts'
            ),
        ),
        migrations.AddConstraint(
            model_name='twitsprofilesnotifications',
            constraint=models.UniqueConstraint(
                fields=('twit', 'profile'), name='unique_notification'
            ),
        ),
        migrations.AddConstraint(
            model_name='twitsprofileslikes',
            constraint=models.UniqueConstraint(
                fields=('twit', 'profile'), name='unique_likes'
            ),
        ),
        migrations.AddConstraint(
            model_name='followers',
            constraint=models.UniqueConstraint(
                fields=('profile', 'follower_profile'), name='unique_followers'
            ),
        ),
    ]
